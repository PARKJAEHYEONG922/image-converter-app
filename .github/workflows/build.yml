name: Build and Release

on:
  push:
    tags:
      - 'v*' # v1.0.0 형태의 태그가 푸시될 때 실행
  workflow_dispatch: # 수동 실행 가능

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run dist:win

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npm run dist:mac
        # env:
          # macOS 코드 서명 (선택사항)
          # CSC_LINK: ${{ secrets.MAC_CERT }}
          # CSC_KEY_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_PASSWORD }}

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: release/*.exe

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: release/*.dmg

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-installer
          path: ./release-windows

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-installer
          path: ./release-macos

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./release-windows/*.exe
            ./release-macos/*.dmg
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
